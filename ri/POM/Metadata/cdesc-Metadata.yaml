--- !ruby/object:RDoc::RI::ClassDescription 
attributes: 
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: List of authors.
  name: authors
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Code name of the release (eg. Woody)
  name: codename
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: What other packages does this package conflict.
  name: conflicts
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Maintainer.
  name: contact
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Copyright notice. Eg. &quot;Copyright (c) 2009 Thomas Sawyer&quot;
  name: copyright
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: The date the project was started.
  name: created
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: "Detailed description. Aliased as #abstract."
  name: description
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: File pattern list of files to distribute in package. This is provided to assist with MANIFEST automation.
  name: distribute
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Resource to find downloadable packages.
  name: download
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: List of non-ruby extension configuration scripts. These are used to compile the extensions.
  name: extensions
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Homepage
  name: homepage
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: License.
  name: license
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Load path(s) (used by Ruby's own site loading and RubyGems). The default is 'lib/', which is usually correct.
  name: loadpath
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: "Name of the user-account or master-project to which this project belongs. The namespace defaults the project name if no entry is given. TODO: Better term then namespace?"
  name: namespace
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Abirtary information, especially about what might be needed to use this package. This is strictly information for the end-user to consider. Eg. &quot;Needs a fast graphics card.&quot;
  name: notes
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Platform (nil for universal)
  name: platform
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: What other package(s) does this package provide the same dependency fulfilment. For example, a package 'bar-plus' might fulfill the same dependency criteria as package 'bar', so 'bar-plus' is said to provide 'bar'.
  name: provides
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: What other packages <b>should</b> be used with this package.
  name: recommend
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Date this version was released.
  name: released
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: "What other packages does this package replace. This is very much like #provides but expresses a closser relation. For instance &quot;libXML&quot; has been replaced by &quot;libXML2&quot;."
  name: replaces
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Location of central vcs repository.
  name: repository
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: What other packages <b>must</b> this package have in order to function.
  name: requires
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Project root directory.
  name: root
  rw: R
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Map project directories and files to publish locations on webserver.
  name: sitemap
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: "Current status (stable, beta, alpha, rc1, etc.) DEPRECATE: (should be indicated by version number)"
  name: status
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: What other packages <b>could</b> be useful with this package.
  name: suggest
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: A one-line brief description.
  name: summary
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Title of package (this defaults to project name capitalized).
  name: title
  rw: RW
class_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: alias_accessor
- !ruby/object:RDoc::RI::MethodSummary 
  name: attr_accessor
- !ruby/object:RDoc::RI::MethodSummary 
  name: load
- !ruby/object:RDoc::RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 1
  text: Metadata
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "NOTE: It is tricky to get lazy loading and aliases to work together. The following code is doing the job, but it probably needs to be reimplemented in a better way."
- !ruby/struct:RDoc::Markup::Flow::RULE 
  width: 
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 1
  text: Metadata
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "NOTE: It is tricky to get lazy loading and aliases to work together. The following code is doing the job, but it probably needs to be reimplemented in a better way."
constants: 
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::VERB 
    body: " Glob for matching against meta directory names,\n <tt>.meta/</tt> and <tt>meta/</tt>.\n"
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: METADIRS = '{.meta,meta}'
  name: METADIRS
  value: "['.meta', 'meta']"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  name: PRIMARY
  value: "['project', 'name', 'version']"
full_name: POM::Metadata
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: add_attribute
- !ruby/object:RDoc::RI::MethodSummary 
  name: assert_valid
- !ruby/object:RDoc::RI::MethodSummary 
  name: author
- !ruby/object:RDoc::RI::MethodSummary 
  name: author=
- !ruby/object:RDoc::RI::MethodSummary 
  name: authors=
- !ruby/object:RDoc::RI::MethodSummary 
  name: backup!
- !ruby/object:RDoc::RI::MethodSummary 
  name: conflicts=
- !ruby/object:RDoc::RI::MethodSummary 
  name: distribute=
- !ruby/object:RDoc::RI::MethodSummary 
  name: email
- !ruby/object:RDoc::RI::MethodSummary 
  name: entries
- !ruby/object:RDoc::RI::MethodSummary 
  name: executables
- !ruby/object:RDoc::RI::MethodSummary 
  name: extensions
- !ruby/object:RDoc::RI::MethodSummary 
  name: list
- !ruby/object:RDoc::RI::MethodSummary 
  name: load
- !ruby/object:RDoc::RI::MethodSummary 
  name: loadpath=
- !ruby/object:RDoc::RI::MethodSummary 
  name: name
- !ruby/object:RDoc::RI::MethodSummary 
  name: name=
- !ruby/object:RDoc::RI::MethodSummary 
  name: namespace
- !ruby/object:RDoc::RI::MethodSummary 
  name: package_name
- !ruby/object:RDoc::RI::MethodSummary 
  name: provides=
- !ruby/object:RDoc::RI::MethodSummary 
  name: read
- !ruby/object:RDoc::RI::MethodSummary 
  name: recommend=
- !ruby/object:RDoc::RI::MethodSummary 
  name: released=
- !ruby/object:RDoc::RI::MethodSummary 
  name: replaces=
- !ruby/object:RDoc::RI::MethodSummary 
  name: requires=
- !ruby/object:RDoc::RI::MethodSummary 
  name: save
- !ruby/object:RDoc::RI::MethodSummary 
  name: stage_name
- !ruby/object:RDoc::RI::MethodSummary 
  name: suggest=
- !ruby/object:RDoc::RI::MethodSummary 
  name: summary
- !ruby/object:RDoc::RI::MethodSummary 
  name: summary=
- !ruby/object:RDoc::RI::MethodSummary 
  name: title
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_s
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_yaml
- !ruby/object:RDoc::RI::MethodSummary 
  name: valid?
- !ruby/object:RDoc::RI::MethodSummary 
  name: version
- !ruby/object:RDoc::RI::MethodSummary 
  name: version=
name: Metadata
superclass: Object
