= Version Bumping

In the demonstration to follow we will uses this macro to reload
the PACKAGE file.

  def package
    YAML.load(File.new('tmp/example/PACKAGE'))
  end

Given a PACKAGE project file containing ...

    name : foo
    major: 1
    minor: 0
    patch: 0

First, the `pom bump` command, when given no other arguments will
display the current version.

  `cd tmp/example; pom bump`.assert == "1.0.0"

This is the same as using `pom show version`.

  `cd tmp/example; pom show version`.assert == "1.0.0"

We can use the `pom bump` command to bump the `patch` version
using the `--patch` flag.

  `cd tmp/example; pom bump --patch`

We can see that the `patch` number has been incremented.

  package['patch'].assert = 1

Again, we can use the `pom bump` command to bump the `minor` version
with the `--minor` flag.

  `cd tmp/example; pom bump --minor`

And we can see that the `minor` number has been incremented.

  package['minor'].assert = 1

We can use the `pom bump` command to bump the `major` version by
using the `--major` flag.

  `cd tmp/example; pom bump --major`

We can see that the `major` number has been incremented.

  package['major'].assert = 2



